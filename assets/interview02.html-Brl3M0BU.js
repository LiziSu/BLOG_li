import{_ as e,o as r,c as t,e as n}from"./app-Bp0opq6Q.js";const a={},i=n(`<p><strong>面试时长：15min 面试情况：八股文问到红温 稀碎</strong></p><p>1、css选择器及优先级？<br> id选择器 &gt; 类选择器 伪类选择器 &gt; 标签选择器 伪元素选择器<br> !important优先级最高<br> 优先级相同的，最后出现的优先级最高</p><p>2、伪类选择器有些什么，用在什么地方？<br> 伪类选择器：用来选择dom元素在特定状态下的样式<br> 常用伪类选择器：<br> ：hover 鼠标悬停的时候的样式<br> ：active 当元素被激活时（如点击）时的样式</p><div class="language-angular2html line-numbers-mode" data-highlighter="prismjs" data-ext="angular2html" data-title="angular2html"><pre class="language-angular2html"><code><span class="line">button:active {</span>
<span class="line">  background-color: blue;</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3、flex弹性布局有哪些能说几个说几个？<br> 设置在容器上<br> flex-direction：主轴的方向（项目的排列） flex-wrap：一条轴线放不下如何换行<br> flex-flow：flex-direction属性和flex-wrap属性的简写形式<br> justify-content：项目在主轴上的对齐方式<br> align-items：在交叉轴上的对齐方式<br> align-content：对根轴线的对齐方式<br> 设置在项目上<br> order：排序顺序，数值越小越靠前<br> flex-grow：放大比例 默认0<br> flex-shrink：缩小比例 默认为1<br> flex-basis：在分配多余空间之前，项目占据的主轴空间。浏览器根据这个属性计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小<br> flex：flex-grow，flex-shrink和flex-basis的简写<br> align-self：允许单个项目有与其他项目不一样的对齐方式</p><p>4、BFC的理解，如何创建BFC？<br> BFC：一个独立的布局环境，可以理解为一个容器，在这个容器中按照一定规则进行物品摆放，并且不会影响其他环境中的物品。<br> 创建条件：<br> 元素设置浮动：float除了none以外的值<br> 元素设置绝对定位：position（absolute，fixed）<br> display的值为：inline-block，table-cell，table-caption，flex等<br> overflow的值为：hidden，auto，scroll<br> BFC作用：<br> （1）解决margin的重叠问题<br> （2）解决高度塌陷问题（给子元素设置浮动后，父元素高度会为0，通常给福元素添加 overflow: hidden;</p><p>5、数据类型检测方式有哪些？<br> （1）typeof：数组，对象和null返回object<br> （2）instanceof：运行机制是判断在其原型链中能否找到该类型的原型（只能正确判断引用数据类型Object（Array、Function））<br> （3）Object.prototype.toString.call()</p><p>6、如何查找数组对象里的某一个对象？<br> （1）.find（） 返回属性所在的整个对象<br> （2）filter 过滤出符合条件的所有对象，返回数组</p><p>7、处理数组的方法有哪些？是否改变原数组？<br> ● 数组和字符串的转换方法：toString()（数组转字符串），join() 可指定转换为字符串时的分隔符。<u>不改变原数组</u><br> ● 数组尾部操作的方法：pop() 删除最后一位 <u>改变原数组</u><br>             push()在数组最后一位添加一个或多个元素，并返回新数组的长度，可以传入多个参数，<u>改变原数组</u><br> ● 数组首部操作的方法：shift()移除数组第一项，unshift()在开头向数组添加一个或多个元素 <u>改变原数据</u><br> ● 重排序的方法：reverse() 将数组的数据进行反转<br>          sort()元素排序并返回数组，arr.sort(function(a,b)),a&gt;b从小到大 b&gt;a从大到小 <u>改变原数据</u><br> ● 数组连接的方法：concat() ，返回的是拼接好的数组，<u>不改变原数组</u><br> ● 数组截取办法：slice()，用于截取数组中的一部分返回，<u>不改变原数组</u><br> ● 数组插入方法：splice() 在指定位置删除指定个数元素再增加任意个数元素，返回删除的数据所组成的数组 <u>改变原数据</u><br> ● indexOf() lastIndexOf() 查询某个元素在数组中第一次/最后一次（反查）出现的位置 存在返回下标 不存在返回-1 <u>不改变原数组</u><br> ● 迭代方法：不改变原数组<br>   every()：判断所有元素是否满足 全部满足true 有一个不满足就false<br>   some()：判断是否存在满足某个条件的元素 有一个就返回true 都不满足返回false<br>   filter()：遍历数组, 每次循环时执行传入的回调函数,回调函数返回一个条件,把满足条件的元素筛选出来放到新数组中<br>   map()：遍历数组, 每次循环时执行传入的回调函数,根据回调函数的返回值,生成一个新的数组<br>   forEach()：遍历数组,每次循环中执行传入的回调函数<br> ● 数组归并方法：reduce()：(归并)遍历数组, 每次循环时执行传入的回调函数,回调函数会返回一个值,将该值作为初始值prev,传入到下一次函数中；reduceRight()：用法同reduce,但是从右向左<br> 8、处理字符串的方法有哪些？<br> ● charAt(x)：返回字符串x字符的位置<br> ● concat()：用于连接两个或多个字符串，返回拼接后的新的字符串，不改变现有的字符串。 ● slice(start, [end]): 取字符串的某个部分，返回一个新的字符串。包括字符串从start开始到end结束（包括start，不包括end）的所有字符,没有end则默认到结尾<br> ● substring(start,stop)：用于提取字符串中介于两个指定下标之间的字符<br> ● trim()：从一个字符串的两端删除空白字符</p>`,9),l=[i];function s(b,o){return r(),t("div",null,l)}const u=e(a,[["render",s],["__file","interview02.html.vue"]]),p=JSON.parse('{"path":"/blogs/experience/interview02.html","title":"某大数据公司（外包）","lang":"en-US","frontmatter":{"title":"某大数据公司（外包）","date":"2024/08/13"},"headers":[],"git":{},"filePathRelative":"blogs/experience/interview02.md"}');export{u as comp,p as data};
