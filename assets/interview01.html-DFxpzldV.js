import{_ as s,r,o as i,c as a,a as e,b as n,d as t,e as o}from"./app-Bp0opq6Q.js";const c={},d=e("p",null,[e("strong",null,"面试时长：30min 面试情况：拉垮")],-1),u=e("ul",null,[e("li",null,[n("自我介绍"),e("br"),n(" 你好，我叫XX，今天来面试贵公司前端工程师岗位；目前有过一年前后端开发和三年前端开发经验，在职期间主要负责过物联网云平台系统，门禁管理系统，医院对账平台，公司官网等项目的研发，对工业物联网业务，组件化开发和性能调优有自己的理解，希望能获得此次机会，谢谢。"),e("br"),e("strong",null,"提问")])],-1),p=e("p",null,"1、vue2和vue3的区别",-1),v=e("li",null,"源码层面：vue3源码使用ts重构，对ts支持更友好",-1),_=e("li",null,"object.defineProperty对于数组的拦截有问题，为此vue需要专门为数组响应式做一套实现；另外不能拦截新增、删除属性；在初始化时需要深度递归遍历待处理的对象才能对它进行完全拦截，明显增加了初始化的时间。",-1),b=e("br",null,null,-1),f=e("u",null,[e("em",null,[e("strong",null,"object.defineProperty和proxy区别")])],-1),m=e("br",null,null,-1),h={href:"https://blog.csdn.net/qq_38290251/article/details/135280017",target:"_blank",rel:"noopener noreferrer"},g=e("ul",null,[e("li",null,"实现方式：Proxy使用代理机制来实现响应式；Object.defineProperty使用了getter和setter方法来实现。"),e("li",null,"作用对象：Proxy可以代理整个对象，包括对象的所有属性、数组的所有元素以及类似数组对象的所有元素；Object.defineProperty 只能代理对象上定义的属性。"),e("li",null,"监听属性：Proxy可以监听到新增属性和删除属性的操作；Object.defineProperty只能监听到已经定义的属性的变化。")],-1),x=e("br",null,null,-1),y={href:"https://blog.csdn.net/qq_51075057/article/details/130679841",target:"_blank",rel:"noopener noreferrer"},P=o(`<p>2、vue3中ref和reactive的区别<br> ref可以代理原始数据，reactive不行</p><p>3、有没有用过mixins（没有 寄）<br> 看不懂，还不会写</p><p>4、vue的原理？</p><p>5、有没有在项目中写过复杂组件？</p><p><strong>场景题</strong><br> 1、发版本前通知用户实现思路？<br> 前后端：websocket配合通知更新<br> 纯前端：编译打包项目时动态生成一个记录版本号的version.json文件，通过轮询，将静态文件version.json中的版本号与缓存中的版本号对比是否一致，一致继续监听，不一致就通知用户是否更新。</p><p>2、有个el-table，编辑操作的时候表单没有回显数值是什么原因？（后台数据拿到了也能够打印出来）<br> 面试官提示：用v-if去重新渲染，原因是初次进入时已经完成渲染了，点击后就不再次渲染。</p><ul><li>引申问题：v-for和v-if的优先级（2和3中是否相同） vue2中v-for总是优先于v-if vue3中v-if总是优先于v-for vue2中v-if和v-for不能在同一个dom上使用：v-for优先于v-if被解析,如果同时出现，每次渲染都会先执行循环再判断条件,无论如何循环都不可避免，浪费了性能<br> 最优的方式是： 使用computed计算出满足if条件的数据，然后再使用v-for做渲染</li></ul><p>3、新增完成后继续点击新增后，下次表单还会显示上次新增内容怎么处理？<br> 新增时做表单初始化</p><div class="language-angular2html line-numbers-mode" data-highlighter="prismjs" data-ext="angular2html" data-title="angular2html"><pre class="language-angular2html"><code><span class="line">if (this.$refs[formName] !== undefined) {</span>
<span class="line">    // this.$refs 这个是必须dom渲染完成后</span>
<span class="line">    this.$nextTick(() =&gt; { //延迟渲染避免渲染问题</span>
<span class="line">    this.$refs[formName].resetFields()</span>
<span class="line">  })</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4、$message信息本身不带关闭，需要加上关闭并且解决多条信息提示共存的情况，要怎么实现，全局注册在那里？<br> 重写message后在main.js中进行引用</p>`,10);function j(k,q){const l=r("ExternalLinkIcon");return i(),a("div",null,[d,u,p,e("ul",null,[v,e("li",null,[n("性能层面：vue2通过Object.defineProperty方法，把data对象里每个数据的读写转化成setter和getter方法，当数据变化时通知视图更新；vue3通过proxy来实现数据挟持。 "),e("ul",null,[_,e("li",null,[n("Proxy：不仅可以对数组实现拦截，还能对 Map、Set实现拦截；另外 Proxy 的拦截也是懒处理行为。如果用户没有访问嵌套对象，那么也不会实施拦截，这就让初始化的速度和内存占用都改善。"),b,f,m,n(" 参考文档："),e("a",h,[n("https://blog.csdn.net/qq_38290251/article/details/135280017"),t(l)]),g])])]),e("li",null,[n("代码写法和生命周期（setup和加on）"),x,n(" 参考文档："),e("a",y,[n("https://blog.csdn.net/qq_51075057/article/details/130679841"),t(l)])])]),P])}const w=s(c,[["render",j],["__file","interview01.html.vue"]]),O=JSON.parse('{"path":"/blogs/experience/interview01.html","title":"安赛瑞","lang":"en-US","frontmatter":{"title":"安赛瑞","date":"2024/08/13"},"headers":[],"git":{},"filePathRelative":"blogs/experience/interview01.md"}');export{w as comp,O as data};
