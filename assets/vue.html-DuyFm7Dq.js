import{_ as e,o as t,c as r,e as o}from"./app-Bp0opq6Q.js";const l={},c=o("<ol><li><p>vue基本原理<br> 当创建一个vue实例时，vue2通过Object.defineProperty 重新定义data中的属性，当页面要使用对应属性的时候，首先进行依 赖收集，收集当前组件的watcher，如果属性发生变化会通知相关依赖进行更新操作。<br> vue3中用proxy代替，因为其可以直接监听对象和数组的变化，而且有多种拦截方式。</p></li><li><p>双向数据绑定原理： 定义：数据绑定方式，数据层（model）和视图层（view）是双向的<br> 原理：通过数据劫持和发布订阅模式结合，核心是Object.defineProperty()方法<br> 通过Object.defineProperty()来劫持各个属性的setter，getter，在数据变动时发布消息给订阅者，触发相应的监听回调。<br> Object.defineProperty()数据劫持的缺点：对一些属性操作（例如数组的大部分操作）是拦截不到的，vue3中用proxy拦截任何数据改变</p></li><li><p>MVVM、MVC、MVP的区别</p></li></ol>",1),i=[c];function a(n,s){return t(),r("div",null,i)}const u=e(l,[["render",a],["__file","vue.html.vue"]]),v=JSON.parse('{"path":"/blogs/front/vue/vue.html","title":"vue","lang":"en-US","frontmatter":{"title":"vue","date":"2024/08/15"},"headers":[],"git":{},"filePathRelative":"blogs/front/vue/vue.md"}');export{u as comp,v as data};
